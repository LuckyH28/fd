<?xml version="1.0" encoding="UTF-8"?>
<!--
    status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
-->
<Configuration status="error" monitorInterval="60">

    <Properties>
        <!-- 配置日志文件输出 -->
        <Property name="LOG_HOME" value="/home/logs/51saas/log4j2"/> <!-- 日志路径设置 -->
        <Property name="P_Layout" value = "%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n" /><!-- 日志格式 -->
        <Property name="TriggerSize" value="100M"/><!-- 日志分割大小设置 -->
        <Property name="imFlush" value="true"/><!-- 日志是否立即写入，默认true-立即写入 -->
    </Properties>

    <Appenders>
        <!--输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息(onMatch),以下的直接拒绝(onMismatch) -->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="${P_Layout}"/>
        </Console>

        <!-- DEBUG日志 -->
        <!-- ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。 -同步管用，异步不管用 -->
        <RollingRandomAccessFile name="debug_appender"
                                 immediateFlush="${imFlush}" fileName="${LOG_HOME}/debug.log"
                                 filePattern="${LOG_HOME}/debug.%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout>
                <pattern>"${P_Layout}</pattern>
            </PatternLayout>
            <Policies>
                <!--基于时间的触发策略。该策略主要是完成周期性的log文件封存工作
                    interval指定两次封存动作之间的时间间隔,interval的单位是根据filePattern来的
                    modulate，boolean型，说明是否对封存时间进行调制，若modulate=true，则封存时间将以0点为边界进行偏移计算
                -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${TriggerSize}"/>
            </Policies>
            <Filters>
                <!-- 值阀过滤器， 通过日志输出级别的设置来输出日志-->
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingRandomAccessFile>

        <!-- INFO日志 -->
        <RollingRandomAccessFile name="info_appender"
                                 immediateFlush="${imFlush}" fileName="${LOG_HOME}/info.log"
                                 filePattern="${LOG_HOME}/info.%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout>
                <pattern>${P_Layout}</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${TriggerSize}"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingRandomAccessFile>

        <!-- WARN日志-->
        <RollingRandomAccessFile name="warn_appender"
                                 immediateFlush="${imFlush}" fileName="${LOG_HOME}/warn.log"
                                 filePattern="${LOG_HOME}/warn.%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout>
                <pattern>"${P_Layout}</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${TriggerSize}"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingRandomAccessFile>

        <!-- error日志-->
        <RollingRandomAccessFile name="error_appender"
                                 immediateFlush="${imFlush}" fileName="${LOG_HOME}/error.log"
                                 filePattern="${LOG_HOME}/error.%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout>
                <pattern>"${P_Layout}</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${TriggerSize}"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingRandomAccessFile>
    </Appenders>

    <Loggers>
        <!-- 配置日志的根节点
        6个日志级别，级别由低到高分别为trace < debug <info < warn < error < fatal
        -->
        <Root level="info" includeLocation="true">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="debug_appender"/>
            <AppenderRef ref="info_appender"/>
            <AppenderRef ref="warn_appender"/>
            <AppenderRef ref="error_appender"/>
        </Root>
        <!-- 异步 
   		<AsyncRoot level="error" includeLocation="true">  
       		<AppenderRef ref="Console" />
       		<AppenderRef ref="debug_appender"/>
            <AppenderRef ref="info_appender"/>
            <AppenderRef ref="warn_appender"/>
            <AppenderRef ref="error_appender"/>  
    	</AsyncRoot>
        -->
    </Loggers>

</Configuration>